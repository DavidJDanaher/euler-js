/* Project Euler - Problem 2
ddanaherJS

Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million,
find the sum of the even-valued terms.

https://projecteuler.net/problem=2
*/

var startTime = new Date().getMilliseconds();
var endTime;
var lesser = 1;
var greater = 2;
var sumOfEvens = 2;
var currentElement = 0;

console.log('Probelm 2: The solution [' + evenFibonacci(4000000) + '] was found in [' + (endTime - startTime) + '] ms');

function evenFibonacci(upperLimit) {

    while(currentElement <= upperLimit) {

        if (currentElement % 2 === 0) {
            sumOfEvens += currentElement;
        }

        currentElement = generateNextFibonacci(lesser, greater);
        lesser = greater;
        greater = currentElement;
    }
    endTime = new Date().getMilliseconds();
    return sumOfEvens;
}

function generateNextFibonacci(smaller, larger) {
    return smaller + larger;
}
